function(add_check_target _TARGET)
  set(_SOURCES "${ARGN}")
  #message (STATUS "_SOURCES: ${_SOURCES}")
  set (_FULL_PATH_SOURCES "")
  set (LL_FILES "")
  set (prefix "${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${_TARGET}.dir")
  foreach(src IN LISTS _SOURCES)
    set (src "${CMAKE_CURRENT_SOURCE_DIR}/${src}")
    get_filename_component (realpath_src ${src} REALPATH)
    list (APPEND _FULL_PATH_SOURCES ${realpath_src})
    if (src STREQUAL realpath_src)
      string (REPLACE "${CMAKE_CURRENT_SOURCE_DIR}" "${prefix}" src "${src}")
    else()
      set (src "${prefix}/${realpath_src}")
    endif()
    string (CONCAT src "${src}" ".ll")
    #message (STATUS "src: ${src}")
    list (APPEND LL_FILES ${src})
  endforeach()
  #message (STATUS "LL_FILES: ${LL_FILES}")
  if (LANGUAGE STREQUAL "c")
    set (COMPILER "clang")
    string (REPLACE " " ";" COMPILER_FLAGS "${CMAKE_C_FLAGS}")
  else()
    set (COMPILER "clang++")
    string (REPLACE " " ";" COMPILER_FLAGS "${CMAKE_CXX_FLAGS}")
  endif()
  get_target_property(LIBRARIES ${_TARGET} LINK_LIBRARIES)
  set (LINK_FLAGS "")
  foreach (library IN LISTS LIBRARIES)
    list (APPEND LINK_FLAGS "-l${library}")
  endforeach() 
  #message (STATUS "Link flags: ${LINK_FLAGS}")
  add_custom_target (${_TARGET}-check
    COMMAND dp-checker -p . ${_FULL_PATH_SOURCES}
    COMMAND ${COMPILER} ${COMPILER_FLAGS} -O3 ${LL_FILES} -o ${_TARGET}-check ${LINK_FLAGS} -lcheck-rt
  )
  add_custom_target (check-clean
    COMMAND rm -rf ${_TARGET}-check ${LL_FILES})
endfunction(add_check_target)
